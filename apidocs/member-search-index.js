memberSearchIndex = [{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoValuesManager","l":"addValues(CryptoEnum, Set<CryptoValue>)","u":"addValues(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,java.util.Set)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoValuesInMemManager","l":"addValues(CryptoEnum, Set<CryptoValue>)","u":"addValues(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,java.util.Set)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"SortOrder","l":"ASC"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"btc"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"calculateMaxPrice(Set<CryptoValue>, TimePeriod)","u":"calculateMaxPrice(java.util.Set,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoMetricsCalculator","l":"calculateMetric(CryptoEnum, CryptoMetricEnum, TimePeriod)","u":"calculateMetric(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,com.dimitris.cryptoanalyze.service.enums.CryptoMetricEnum,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"calculateMetric(CryptoEnum, CryptoMetricEnum, TimePeriod)","u":"calculateMetric(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,com.dimitris.cryptoanalyze.service.enums.CryptoMetricEnum,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoMetricsCalculator","l":"calculateMetrics(CryptoEnum, TimePeriod)","u":"calculateMetrics(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"calculateMetrics(CryptoEnum, TimePeriod)","u":"calculateMetrics(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoMetricsCalculator","l":"calculateMetricsPerCrypto(TimePeriod)","u":"calculateMetricsPerCrypto(com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"calculateMetricsPerCrypto(TimePeriod)","u":"calculateMetricsPerCrypto(com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"calculateMinPrice(Set<CryptoValue>, TimePeriod)","u":"calculateMinPrice(java.util.Set,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"calculateNewestPrice(Set<CryptoValue>, TimePeriod)","u":"calculateNewestPrice(java.util.Set,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"calculateNormalizedPriceRange(Set<CryptoValue>, TimePeriod)","u":"calculateNormalizedPriceRange(java.util.Set,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"calculateOldestPrice(Set<CryptoValue>, TimePeriod)","u":"calculateOldestPrice(java.util.Set,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze","c":"CryptoAnalyzerApplication","l":"CryptoAnalyzerApplication()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoAnalyzerController","l":"CryptoAnalyzerController(CryptoAnalyzer)","u":"%3Cinit%3E(com.dimitris.cryptoanalyze.service.CryptoAnalyzer)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoAnalyzerImpl","l":"CryptoAnalyzerImpl(CryptoMetricsCalculator)","u":"%3Cinit%3E(com.dimitris.cryptoanalyze.service.CryptoMetricsCalculator)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoExceptionHandler","l":"CryptoExceptionHandler()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.service.exception","c":"CryptoInternalException","l":"CryptoInternalException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"CryptoMetricDto(String, BigDecimal)","u":"%3Cinit%3E(java.lang.String,java.math.BigDecimal)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"CryptoMetricsCalculatorImpl(CryptoValuesManager)","u":"%3Cinit%3E(com.dimitris.cryptoanalyze.service.CryptoValuesManager)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsDto","l":"CryptoMetricsDto(Map<String, BigDecimal>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsListDto","l":"CryptoMetricsListDto(List<CryptoMetricDto>)","u":"%3Cinit%3E(java.util.List)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"CryptoMetricsUtil","l":"CryptoMetricsUtil()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.service.exception","c":"CryptoNotFoundException","l":"CryptoNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"CryptoValue(long, BigDecimal)","u":"%3Cinit%3E(long,java.math.BigDecimal)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoValuesCsvReader","l":"CryptoValuesCsvReader()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoValuesInMemManager","l":"CryptoValuesInMemManager()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"SortOrder","l":"DESC"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"doge"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsDto","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsListDto","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"ErrorResponseDto","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"ErrorResponseDto","l":"ErrorResponseDto(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"eth"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"FileDataLoader","l":"FileDataLoader(CryptoValuesFileReader, CryptoValuesManager)","u":"%3Cinit%3E(com.dimitris.cryptoanalyze.service.CryptoValuesFileReader,com.dimitris.cryptoanalyze.service.CryptoValuesManager)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoMetricsCalculator","l":"findCryptoWithHighestNormalizedRange(TimePeriod)","u":"findCryptoWithHighestNormalizedRange(com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"findCryptoWithHighestNormalizedRange(TimePeriod)","u":"findCryptoWithHighestNormalizedRange(com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"getCode()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"getCode()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"getCrypto()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsListDto","l":"getCryptos()"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoAnalyzer","l":"getCryptosSortedByNormalizedRangeDesc(Optional<TimePeriodRequestDto>)","u":"getCryptosSortedByNormalizedRangeDesc(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoAnalyzerImpl","l":"getCryptosSortedByNormalizedRangeDesc(Optional<TimePeriodRequestDto>)","u":"getCryptosSortedByNormalizedRangeDesc(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoAnalyzerController","l":"getCryptoWithHighestNormalizedRange(Optional<TimePeriodRequestDto>)","u":"getCryptoWithHighestNormalizedRange(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoAnalyzer","l":"getCryptoWithHighestNormalizedRange(Optional<TimePeriodRequestDto>)","u":"getCryptoWithHighestNormalizedRange(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoAnalyzerImpl","l":"getCryptoWithHighestNormalizedRange(Optional<TimePeriodRequestDto>)","u":"getCryptoWithHighestNormalizedRange(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"ErrorResponseDto","l":"getErrorMessage()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"getFromDateTime()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"getFromDateTime()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsDto","l":"getMetrics()"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoAnalyzer","l":"getMetricsForCrypto(Optional<TimePeriodRequestDto>, String)","u":"getMetricsForCrypto(java.util.Optional,java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoAnalyzerImpl","l":"getMetricsForCrypto(Optional<TimePeriodRequestDto>, String)","u":"getMetricsForCrypto(java.util.Optional,java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoAnalyzerController","l":"getMetricsForCrypto(String, Optional<TimePeriodRequestDto>)","u":"getMetricsForCrypto(java.lang.String,java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"getPrice()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"getTimestamp()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"getToDateTime()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"getToDateTime()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"getValue()"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoValuesManager","l":"getValues(CryptoEnum)","u":"getValues(com.dimitris.cryptoanalyze.service.enums.CryptoEnum)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoValuesInMemManager","l":"getValues(CryptoEnum)","u":"getValues(com.dimitris.cryptoanalyze.service.enums.CryptoEnum)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoExceptionHandler","l":"handleCryptoNotFoundException(CryptoNotFoundException)","u":"handleCryptoNotFoundException(com.dimitris.cryptoanalyze.service.exception.CryptoNotFoundException)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoExceptionHandler","l":"handleInternalException(CryptoInternalException)","u":"handleInternalException(com.dimitris.cryptoanalyze.service.exception.CryptoInternalException)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsDto","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsListDto","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"ErrorResponseDto","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"hashCode()"},{"p":"com.dimitris.cryptoanalyze.service","c":"DataLoader","l":"loadData()"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"FileDataLoader","l":"loadData()"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"FileDataLoader","l":"loadData(CryptoEnum, String)","u":"loadData(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service","c":"DataLoader","l":"loadInitialData()"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"FileDataLoader","l":"loadInitialData()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"ltc"},{"p":"com.dimitris.cryptoanalyze","c":"CryptoAnalyzerApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"MAX_PRICE"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"MIN_PRICE"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"NEWEST_PRICE"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"NORMALIZED_PRICE_RANGE"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"OLDEST_PRICE"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoValuesFileReader","l":"read(CryptoEnum, String)","u":"read(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoValuesCsvReader","l":"read(CryptoEnum, String)","u":"read(com.dimitris.cryptoanalyze.service.enums.CryptoEnum,java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"setFromDateTime(Optional<LocalDateTime>)","u":"setFromDateTime(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"setToDateTime(Optional<LocalDateTime>)","u":"setToDateTime(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service","c":"CryptoMetricsCalculator","l":"sortCryptosByMetric(CryptoMetricEnum, SortOrder, TimePeriod)","u":"sortCryptosByMetric(com.dimitris.cryptoanalyze.service.enums.CryptoMetricEnum,com.dimitris.cryptoanalyze.service.enums.SortOrder,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.service.impl","c":"CryptoMetricsCalculatorImpl","l":"sortCryptosByMetric(CryptoMetricEnum, SortOrder, TimePeriod)","u":"sortCryptosByMetric(com.dimitris.cryptoanalyze.service.enums.CryptoMetricEnum,com.dimitris.cryptoanalyze.service.enums.SortOrder,com.dimitris.cryptoanalyze.service.model.TimePeriod)"},{"p":"com.dimitris.cryptoanalyze.controller","c":"CryptoAnalyzerController","l":"sortCryptosByNormalizedRangeDesc(Optional<TimePeriodRequestDto>)","u":"sortCryptosByNormalizedRangeDesc(java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"TimePeriod(Optional<LocalDateTime>, Optional<LocalDateTime>)","u":"%3Cinit%3E(java.util.Optional,java.util.Optional)"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"TimePeriodRequestDto()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"TimeUtil","l":"timestampInBetween(LocalDateTime, LocalDateTime, long)","u":"timestampInBetween(java.time.LocalDateTime,java.time.LocalDateTime,long)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"TimeUtil","l":"timestampNewerThan(long, LocalDateTime)","u":"timestampNewerThan(long,java.time.LocalDateTime)"},{"p":"com.dimitris.cryptoanalyze.service.util","c":"TimeUtil","l":"TimeUtil()","u":"%3Cinit%3E()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricDto","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsDto","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"CryptoMetricsListDto","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"ErrorResponseDto","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.controller.dto","c":"TimePeriodRequestDto","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"CryptoValue","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.service.model","c":"TimePeriod","l":"toString()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"SortOrder","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"values()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoMetricEnum","l":"values()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"SortOrder","l":"values()"},{"p":"com.dimitris.cryptoanalyze.service.enums","c":"CryptoEnum","l":"xrp"}];updateSearchResults();